@startuml

title __PARKINGLOT's Class Diagram__\n

  namespace  {
    namespace ld {
      namespace parkingLot {
        abstract class lld.parkingLot.Account {
            - password : String
            - userName : String
            {abstract} + resetPassword()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        enum AccountStatus {
          ACTIVE
          BLACKLISTED
          CANCELED
          CLOSED
          NONE
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Address {
            - address : String
            - city : String
            - country : String
            - state : String
            - zipCode : int
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Admin {
            + addDisplayBoard()
            + addEntrance()
            + addExit()
            + addParkingSpot()
            + resetPassword()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Car {
            + assignTicket()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Cash {
            + initiateTransaction()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Compact {
            + assignVehicle()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.CreditCard {
            + initiateTransaction()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.DisplayBoard {
            - id : int
            - parkingSpots : Map<String, List<ParkingSpot>>
            + DisplayBoard()
            + addParkingSpot()
            + showFreeSlot()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Entrance {
            - id : int
            + getTicket()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Exit {
            - id : int
            + validateTicket()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Handicapped {
            + assignVehicle()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Large {
            + assignVehicle()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.MotorVehicle {
            + assignTicket()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Motorcycle {
            + assignVehicle()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.ParkingAttendant {
            + processTicket()
            + resetPassword()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.ParkingLot {
            - address : String
            - entrance : HashMap<String, Entrance>
            - exit : HashMap<String, Exit>
            - id : int
            - name : String
            {static} - parkingLot : ParkingLot
            - tickets : HashMap<String, ParkingTicket>
            + addEntrance()
            + addExit()
            {static} + getInstance()
            + getParkingTicket()
            + isFull()
            - ParkingLot()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.ParkingRate {
            - hours : double
            - rate : double
            + calculate()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        abstract class lld.parkingLot.ParkingSpot {
            - id : int
            - isFree : boolean
            {abstract} + assignVehicle()
            + getIsFree()
            + removeVehicle()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.ParkingTicket {
            - amount : double
            - exit : Date
            - status : boolean
            - ticketNo : int
            - timestamp : Date
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        abstract class lld.parkingLot.Payment {
            - amount : double
            - timestamp : Date
            {abstract} + initiateTransaction()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        enum PaymentStatus {
          COMPLETED
          FAILED
          PENDING
          REFUNDED
          UNPAID
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Person {
            - address : String
            - email : String
            - name : String
            - phone : String
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Truck {
            + assignTicket()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        class lld.parkingLot.Van {
            + assignTicket()
        }
      }
    }
  }
  

  namespace  {
    namespace ld {
      namespace parkingLot {
        abstract class lld.parkingLot.Vehicle {
            - licenseNo : int
            {abstract} + assignTicket()
        }
      }
    }
  }
  

  lld.parkingLot.Account o-- lld.parkingLot.Person : person
  lld.parkingLot.Account o-- lld.parkingLot.AccountStatus : status
  lld.parkingLot.Admin -up-|> lld.parkingLot.Account
  lld.parkingLot.Car -up-|> lld.parkingLot.Vehicle
  lld.parkingLot.Cash -up-|> lld.parkingLot.Payment
  lld.parkingLot.Compact -up-|> lld.parkingLot.ParkingSpot
  lld.parkingLot.CreditCard -up-|> lld.parkingLot.Payment
  lld.parkingLot.Handicapped -up-|> lld.parkingLot.ParkingSpot
  lld.parkingLot.Large -up-|> lld.parkingLot.ParkingSpot
  lld.parkingLot.MotorVehicle -up-|> lld.parkingLot.Vehicle
  lld.parkingLot.Motorcycle -up-|> lld.parkingLot.ParkingSpot
  lld.parkingLot.ParkingAttendant -up-|> lld.parkingLot.Account
  lld.parkingLot.ParkingLot o-- lld.parkingLot.ParkingRate : parkingRate
  lld.parkingLot.ParkingSpot o-- lld.parkingLot.Vehicle : vehicle
  lld.parkingLot.ParkingTicket o-- lld.parkingLot.Entrance : entrance
  lld.parkingLot.ParkingTicket o-- lld.parkingLot.Exit : exitIns
  lld.parkingLot.ParkingTicket o-- lld.parkingLot.Payment : payment
  lld.parkingLot.ParkingTicket o-- lld.parkingLot.Vehicle : vehicle
  lld.parkingLot.Payment o-- lld.parkingLot.PaymentStatus : status
  lld.parkingLot.Truck -up-|> lld.parkingLot.Vehicle
  lld.parkingLot.Van -up-|> lld.parkingLot.Vehicle


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
